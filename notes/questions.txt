(* Checkpoint 1 Questions *)
-How do we make two mains (client/server)? Can we have types at the root directory and then share them between the client/server directories?
-Ideas for testing sending to sockets? Should we come up with some mock clients?
-Should the client be tested with mock connections as well?
-Are we using the MonadSocket in the right way (esp. in the type constraint for functions?)
-Should the ServerState be a state monad? How would that look? What are the trade offs?
-Why doesn't sendToChannel compile?

(* Checkpoint 2 Questions *)
-What's up with the number being passed to listen in main? Not sure how that works.
-How to keep track of threads? Should the ServerState store them? Ask because when users logout
we probably want to kill the thread associated with them.
-How do we make the ServerState monadic again? We want to use a state monad.
-What is this accept thing? How does it give me a new socket? When do I close that socket?
-How to restrict the type of the socket in the MonadSocket IO instance to be netsocket,
so that I don't have to call getNetSocket?